Traceback (most recent call last):
  File "distance.py", line 81, in <module>
    line_image = display_lines(lane_image, averaged_lines)
  File "distance.py", line 29, in display_lines
    cv2.line(line_image, (x1, y1), (x2, y2), (255, 0, 0), 10)
OverflowError: signed integer is greater than maximum


Traceback (most recent call last):
  File "edgepoint.py", line 97, in <module>
    averaged_lines = average_slope_intercept(lane_image, lines)
  File "edgepoint.py", line 41, in average_slope_intercept
    for line in lines:
TypeError: 'NoneType' object is not iterable

Traceback (most recent call last):
  File "edgepoint.py", line 104, in <module>
    contours, _ = cv2.findContours(edges_edge, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
ValueError: too many values to unpack (expected 2)

def display_lines(image, lines):
    line_image = np.zeros_like(image)
    if lines is not None:
        for line in lines:
            x1, y1, x2, y2 = line.reshape(4)
	     x1 = np.clip(x1,0,width-1)
	    y1 = np.clip(y1,0,width-1) 									
            x2 = np.clip(x2,0,width-1) 					
            y2 = np.clip(y2,0,width-1)						
	    cv2.line(line_image, (x1, y1), (x2, y2), (255, 0, 0))
    return line_image


if (0 <= x1 < image.shape[1] and 0 <= x2 < image.shape[1] and
                0 <= y1 < image.shape[0] and 0 <= y2 < image.shape[0]):
                cv2.line(line_image, (x1, y1), (x2, y2), (0, 0, 255), 10)
